import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.5.0'

Module {
    dependencies: ["QtQuick 2.3"]
    Component {
        name: "QFileReader"
        prototype: "QObject"
        exports: ["live/FileReader 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QString" }
        Property { name: "monitor"; type: "bool" }
        Property { name: "data"; type: "QByteArray"; isReadonly: true }
        Signal {
            name: "dataChanged"
            Parameter { name: "data"; type: "QByteArray" }
        }
        Signal {
            name: "sourceChanged"
            Parameter { name: "source"; type: "QString" }
        }
        Method {
            name: "asString"
            type: "QString"
            Parameter { name: "data"; type: "QByteArray" }
        }
        Method {
            name: "systemFileChanged"
            Parameter { name: "file"; type: "QString" }
        }
    }
    Component {
        name: "lv::QmlMain"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/Main 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "options"; type: "QJSValue" }
        Property { name: "version"; type: "QString" }
        Signal { name: "run" }
        Method { name: "beforeCompile" }
        Method { name: "afterCompile" }
        Method { name: "arguments" }
        Method {
            name: "option"
            type: "QString"
            Parameter { name: "key"; type: "QString" }
        }
        Method {
            name: "isOptionSet"
            type: "bool"
            Parameter { name: "key"; type: "QString" }
        }
    }
    Component {
        name: "QLogListener"
        prototype: "QObject"
        exports: ["live/LogListener 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "address"; type: "QString" }
        Property { name: "port"; type: "int" }
        Property { name: "allowedIps"; type: "QStringList" }
        Signal { name: "listening" }
        Method { name: "newConnection" }
    }
    Component {
        name: "QStaticFileReader"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/StaticFileReader 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QByteArray"; isReadonly: true }
        Signal {
            name: "dataChanged"
            Parameter { name: "data"; type: "QByteArray" }
        }
        Signal { name: "init" }
        Method {
            name: "staticLoad"
            Parameter { name: "file"; type: "QString" }
            Parameter { name: "params"; type: "QJSValue" }
        }
        Method {
            name: "staticLoad"
            Parameter { name: "file"; type: "QString" }
        }
        Method {
            name: "asString"
            type: "QString"
            Parameter { name: "data"; type: "QByteArray" }
        }
        Method {
            name: "readerDataChanged"
            Parameter { name: "data"; type: "QByteArray" }
        }
    }
    Component {
        name: "QStaticLoader"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/StaticLoader 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QObject"; isReadonly: true; isPointer: true }
        Signal { name: "itemCreated" }
        Method {
            name: "setSource"
            Parameter { name: "arg"; type: "QQmlComponent"; isPointer: true }
        }
        Method {
            name: "staticLoad"
            Parameter { name: "id"; type: "QString" }
        }
    }
    Component {
        name: "QTriangle"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["live/Triangle 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Rotation"
            values: {
                "Top": 0,
                "Right": 1,
                "Bottom": 2,
                "Left": 3
            }
        }
        Property { name: "rotation"; type: "int" }
        Property { name: "color"; type: "QColor" }
    }
    Component {
        name: "lv::VisualLogFilter"
        prototype: "lv::VisualLogBaseModel"
        exports: ["live/VisualLogFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "lv::VisualLogBaseModel"; isPointer: true }
        Property { name: "tag"; type: "QString" }
        Property { name: "prefix"; type: "QJSValue" }
        Property { name: "search"; type: "QJSValue" }
        Property { name: "isIndexing"; type: "bool"; isReadonly: true }
        Method { name: "refilterReady" }
        Method { name: "sourceDestroyed" }
        Method { name: "sourceModelReset" }
        Method { name: "sourceModelAboutToReset" }
        Method {
            name: "sourceRowsAboutToBeRemoved"
            Parameter { type: "QModelIndex" }
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "sourceRowsInserted"
            Parameter { type: "QModelIndex" }
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
    }
}
